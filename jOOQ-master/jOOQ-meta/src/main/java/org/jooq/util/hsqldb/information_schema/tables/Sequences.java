/**
 * This class is generated by jOOQ
 */
package org.jooq.util.hsqldb.information_schema.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.1.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sequences extends org.jooq.impl.TableImpl<org.jooq.Record> {

	private static final long serialVersionUID = 453096801;

	/**
	 * The singleton instance of <code>INFORMATION_SCHEMA.SEQUENCES</code>
	 */
	public static final org.jooq.util.hsqldb.information_schema.tables.Sequences SEQUENCES = new org.jooq.util.hsqldb.information_schema.tables.Sequences();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.Record> getRecordType() {
		return org.jooq.Record.class;
	}

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_CATALOG</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SEQUENCE_CATALOG = createField("SEQUENCE_CATALOG", org.jooq.impl.SQLDataType.VARCHAR.length(128), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_SCHEMA</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SEQUENCE_SCHEMA = createField("SEQUENCE_SCHEMA", org.jooq.impl.SQLDataType.VARCHAR.length(128), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_NAME</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SEQUENCE_NAME = createField("SEQUENCE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(128), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.DATA_TYPE</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> DATA_TYPE = createField("DATA_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(65536), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> NUMERIC_PRECISION = createField("NUMERIC_PRECISION", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION_RADIX</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> NUMERIC_PRECISION_RADIX = createField("NUMERIC_PRECISION_RADIX", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_SCALE</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> NUMERIC_SCALE = createField("NUMERIC_SCALE", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.MAXIMUM_VALUE</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> MAXIMUM_VALUE = createField("MAXIMUM_VALUE", org.jooq.impl.SQLDataType.VARCHAR.length(65536), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.MINIMUM_VALUE</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> MINIMUM_VALUE = createField("MINIMUM_VALUE", org.jooq.impl.SQLDataType.VARCHAR.length(65536), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.INCREMENT</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> INCREMENT = createField("INCREMENT", org.jooq.impl.SQLDataType.VARCHAR.length(65536), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.CYCLE_OPTION</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> CYCLE_OPTION = createField("CYCLE_OPTION", org.jooq.impl.SQLDataType.VARCHAR.length(3), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_DATA_TYPE</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> DECLARED_DATA_TYPE = createField("DECLARED_DATA_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(65536), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_PRECISION</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> DECLARED_NUMERIC_PRECISION = createField("DECLARED_NUMERIC_PRECISION", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_SCALE</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> DECLARED_NUMERIC_SCALE = createField("DECLARED_NUMERIC_SCALE", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.START_WITH</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> START_WITH = createField("START_WITH", org.jooq.impl.SQLDataType.VARCHAR.length(65536), this);

	/**
	 * The column <code>INFORMATION_SCHEMA.SEQUENCES.NEXT_VALUE</code>. 
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> NEXT_VALUE = createField("NEXT_VALUE", org.jooq.impl.SQLDataType.VARCHAR.length(65536), this);

	/**
	 * Create a <code>INFORMATION_SCHEMA.SEQUENCES</code> table reference
	 */
	public Sequences() {
		super("SEQUENCES", org.jooq.util.hsqldb.information_schema.InformationSchema.INFORMATION_SCHEMA);
	}

	/**
	 * Create an aliased <code>INFORMATION_SCHEMA.SEQUENCES</code> table reference
	 */
	public Sequences(java.lang.String alias) {
		super(alias, org.jooq.util.hsqldb.information_schema.InformationSchema.INFORMATION_SCHEMA, org.jooq.util.hsqldb.information_schema.tables.Sequences.SEQUENCES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.util.hsqldb.information_schema.tables.Sequences as(java.lang.String alias) {
		return new org.jooq.util.hsqldb.information_schema.tables.Sequences(alias);
	}
}
