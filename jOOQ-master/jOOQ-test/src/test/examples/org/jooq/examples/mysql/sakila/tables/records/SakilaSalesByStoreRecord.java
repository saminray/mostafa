/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.mysql.sakila.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * VIEW
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SakilaSalesByStoreRecord extends org.jooq.impl.TableRecordImpl<org.jooq.examples.mysql.sakila.tables.records.SakilaSalesByStoreRecord> implements org.jooq.Record3<java.lang.String, java.lang.String, java.math.BigDecimal> {

	private static final long serialVersionUID = 1974128101;

	/**
	 * Setter for <code>sakila.sales_by_store.store</code>. 
	 */
	public void setStore(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sakila.sales_by_store.store</code>. 
	 */
	public java.lang.String getStore() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>sakila.sales_by_store.manager</code>. 
	 */
	public void setManager(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sakila.sales_by_store.manager</code>. 
	 */
	public java.lang.String getManager() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>sakila.sales_by_store.total_sales</code>. 
	 */
	public void setTotalSales(java.math.BigDecimal value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sakila.sales_by_store.total_sales</code>. 
	 */
	public java.math.BigDecimal getTotalSales() {
		return (java.math.BigDecimal) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.String, java.lang.String, java.math.BigDecimal> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.String, java.lang.String, java.math.BigDecimal> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return org.jooq.examples.mysql.sakila.tables.SakilaSalesByStore.SALES_BY_STORE.STORE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.jooq.examples.mysql.sakila.tables.SakilaSalesByStore.SALES_BY_STORE.MANAGER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.math.BigDecimal> field3() {
		return org.jooq.examples.mysql.sakila.tables.SakilaSalesByStore.SALES_BY_STORE.TOTAL_SALES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getStore();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getManager();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.math.BigDecimal value3() {
		return getTotalSales();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SakilaSalesByStoreRecord value1(java.lang.String value) {
		setStore(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SakilaSalesByStoreRecord value2(java.lang.String value) {
		setManager(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SakilaSalesByStoreRecord value3(java.math.BigDecimal value) {
		setTotalSales(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SakilaSalesByStoreRecord values(java.lang.String value1, java.lang.String value2, java.math.BigDecimal value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SakilaSalesByStoreRecord
	 */
	public SakilaSalesByStoreRecord() {
		super(org.jooq.examples.mysql.sakila.tables.SakilaSalesByStore.SALES_BY_STORE);
	}

	/**
	 * Create a detached, initialised SakilaSalesByStoreRecord
	 */
	public SakilaSalesByStoreRecord(java.lang.String store, java.lang.String manager, java.math.BigDecimal totalSales) {
		super(org.jooq.examples.mysql.sakila.tables.SakilaSalesByStore.SALES_BY_STORE);

		setValue(0, store);
		setValue(1, manager);
		setValue(2, totalSales);
	}
}
