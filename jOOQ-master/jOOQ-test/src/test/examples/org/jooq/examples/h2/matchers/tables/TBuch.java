/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.h2.matchers.tables;

/**
 * This class is generated by jOOQ.
 *
 * An entity holding books
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBuch extends org.jooq.impl.TableImpl<org.jooq.examples.h2.matchers.tables.records.TBuchRecord> implements java.io.Serializable, java.lang.Cloneable {

	private static final long serialVersionUID = 829724903;

	/**
	 * The singleton instance of <code>PUBLIC.T_BOOK</code>
	 */
	public static final org.jooq.examples.h2.matchers.tables.TBuch THE_BOOK = new org.jooq.examples.h2.matchers.tables.TBuch();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.examples.h2.matchers.tables.records.TBuchRecord> getRecordType() {
		return org.jooq.examples.h2.matchers.tables.records.TBuchRecord.class;
	}

	/**
	 * The column <code>PUBLIC.T_BOOK.ID</code>. The book ID
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.AUTHOR_ID</code>. The author ID in entity 'author'
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> AUTHOR_ID = createField("AUTHOR_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.CO_AUTHOR_ID</code>. 
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> CO_AUTHOR_ID = createField("CO_AUTHOR_ID", org.jooq.impl.SQLDataType.INTEGER, THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.DETAILS_ID</code>. 
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> DETAILS_ID = createField("DETAILS_ID", org.jooq.impl.SQLDataType.INTEGER, THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.TITLE</code>. The book's title
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.String> THE_TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false), THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.PUBLISHED_IN</code>. The year the book was published in
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> PUBLISHED_IN = createField("PUBLISHED_IN", org.jooq.impl.SQLDataType.INTEGER.nullable(false), THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.LANGUAGE_ID</code>. The language of the book
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> LANGUAGE_ID = createField("LANGUAGE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.CONTENT_TEXT</code>. Some textual content of the book
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.String> CONTENT_TEXT = createField("CONTENT_TEXT", org.jooq.impl.SQLDataType.CLOB.length(2147483647), THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.CONTENT_PDF</code>. Some binary content of the book
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, byte[]> CONTENT_PDF = createField("CONTENT_PDF", org.jooq.impl.SQLDataType.BLOB.length(2147483647), THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.REC_VERSION</code>. 
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> REC_VERSION = createField("REC_VERSION", org.jooq.impl.SQLDataType.INTEGER, THE_BOOK);

	/**
	 * The column <code>PUBLIC.T_BOOK.REC_TIMESTAMP</code>. 
	 */
	public static final org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.sql.Timestamp> REC_TIMESTAMP = createField("REC_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP, THE_BOOK);

	/**
	 * No further instances allowed
	 */
	private TBuch() {
		super("T_BOOK", org.jooq.examples.h2.matchers.NonPublic.NON_PUBLIC);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.jooq.examples.h2.matchers.tables.records.TBuchRecord> getPrimaryKey() {
		return org.jooq.examples.h2.matchers.Keys.PK_T_BOOK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.jooq.examples.h2.matchers.tables.records.TBuchRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.jooq.examples.h2.matchers.tables.records.TBuchRecord>>asList(org.jooq.examples.h2.matchers.Keys.PK_T_BOOK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, ?>>asList(org.jooq.examples.h2.matchers.Keys.FK_T_BOOK_AUTHOR_ID, org.jooq.examples.h2.matchers.Keys.FK_T_BOOK_CO_AUTHOR_ID, org.jooq.examples.h2.matchers.Keys.FK_T_BOOK_LANGUAGE_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.lang.Integer> getRecordVersion() {
		return org.jooq.examples.h2.matchers.tables.TBuch.REC_VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.TableField<org.jooq.examples.h2.matchers.tables.records.TBuchRecord, java.sql.Timestamp> getRecordTimestamp() {
		return org.jooq.examples.h2.matchers.tables.TBuch.REC_TIMESTAMP;
	}
}
